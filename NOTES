Here is a pretty granular account of where we are and what's left to do
with the CMS work.

IMO the major piece to do here is sufficient test code - there is almost
no useful test code in the ActiveMQ CMS code except for some fairly
lightweight examples which all need modifying to work.

I'd say that to get to something more useful for actual work:
* We need to round out the message support more - with ByteMessage and
  probably MapMessage as this is well used I think.
* Fix message destination handling - this may need changes to
  qpid::messaging.

What's done:
(Class by class)
* ConnectionFactory
- Finished
* Connection
- Finished
x No way to select 0-10 or 1.0 at runtime yet.
* Session
- Basic queue/topic and producer/consumer functionality
- Worker thread
-- calls onException callouts.
-- delegates consumer processing to individual consumers
-- Will create transacted/untransacted session depending on acknowledge
   mode (transacted sessions not support by qpid amqp1.0 support
   currently).
xx No factories for Browsers, DurableConsumer, Consumers with selectors.
xx No unsubscribe(), recover()
* MessageProducer
-- Send messages (optionally specifying delivery mode, priority & time
   to live)
xx No message sending with different destination from producer
xxx This is not directly supported by qpid::messaging so needs a
    protocol specific hack to make work
xxx Could add a setDestination() to qpid::messaging::Message API.
xx No message sending with asynchronous completion callback
xxx This is gap in the qpid::messaging capabilities so will be very hard
    to add without adding this to the underlying qpid capabilities.
xxx Most consonant way to add it to the API would be to add an extension
    to Session::nextReceiver() which also gave back senders with waiting
    acknowledges, and then an API to get next ack for a sender.
* MessageConsumer
- Mostly complete
-- sync and Async receive
-- all acknowledge modes implemented
xx No selectors
* Message
-- Message common code (properties, send, acknowledge)
xx destination not well handled
xxx Cannot extract destination from a received message.
-- TextMessage finished
xx BytesMessage bare bones there
xx StreamMessage nothing implemented
xxx not clear how this maps to qpid API
xx MapMessage nothing implemented
xxx not clear how this maps to qpid API

What features missing:
* Much in the way of test or example code
- beyond simple producer and consumer
* MessageTransformer callouts.
* XA Transactions (whole other connection factory).
* Temporary queues/topics. Factories in session will try to create them but
  they currently just throw.
* Enhanced Connection
- This is used to get an interface to query destinations and to receive callbacks
  on destination events (creation/deletion)
* Selectors
-- Do we need to translate from JMS syntax to the qpid supported syntax?
   (Simple text to text mapping of some variable names)
   If necessary should do this actually in qpid code.
